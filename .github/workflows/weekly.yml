name: weekly-train

on:
  schedule:
    - cron: "0 7 * * 1"  # Mondays at 07:00 UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  train-and-commit-artifacts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        shell: bash
        run: |
          if [ -f requirements.txt ]; then
            python -m pip install --upgrade pip
            pip install -r requirements.txt
          else
            python -m pip install --upgrade pip
            pip install numpy pandas requests lightgbm scikit-learn scipy seaborn matplotlib optuna psycopg2-binary shap
          fi

      - name: Run weekly training pipeline with logging
        env:
          FOOTYSTATS_API_KEY: ${{ secrets.FOOTYSTATS_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DEBUG_MODE: '1'  # Set to 1 to enable verbose logging in the script
        run: |
          python gbm_dc_ev_model.py > training.log 2>&1 || true

      - name: Upload training log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: training-log
          path: training.log

      - name: Retry training if failed (attempt 1)
        if: failure()
        env:
          FOOTYSTATS_API_KEY: ${{ secrets.FOOTYSTATS_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DEBUG_MODE: '1'
        run: |
          echo "⚠️ Retrying weekly training pipeline (attempt 1)..."
          python gbm_dc_ev_model.py > retry1.log 2>&1 || echo "Retry 1 failed"

      - name: Retry training if still failed (attempt 2)
        if: failure()
        env:
          FOOTYSTATS_API_KEY: ${{ secrets.FOOTYSTATS_API_KEY }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DEBUG_MODE: '1'
        run: |
          echo "⚠️ Retrying weekly training pipeline (attempt 2)..."
          python gbm_dc_ev_model.py > retry2.log 2>&1 || echo "Retry 2 failed"

      - name: Upload retry logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: retry-logs
          path: "*.log"

      - name: Commit artifacts
        if: success() && github.event_name != 'pull_request'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          if [ -d artifacts ]; then
            echo "Contents of artifacts/:"
            ls -la artifacts || true
            FILE_COUNT=$(git ls-files --others --exclude-standard artifacts | wc -l)
            if [ "$FILE_COUNT" -gt 0 ]; then
              git add --force artifacts
              git commit -m "chore(artifacts): update artifacts $(date -u +"%Y-%m-%dT%H:%M:%SZ")" || echo "No changes to commit"
              git push || echo "Push failed - check branch protections or token"
            else
              echo "No unignored files in artifacts/ - skipping commit"
            fi
          else
            echo "No artifacts directory - skipping commit"
          fi

      - name: Notify on failure
        if: failure()
        run: |
          echo "🚨 Weekly training workflow failed! Check the uploaded logs (training-log and retry-logs) for details."
          echo "Possible causes: API key issues, data shortages, or dependency errors in gbm_dc_ev_model.py."
          echo "Run ID: ${{ github.run_id }} | Repository: ${{ github.repository }}"

