C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:181: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  all_data = pd.concat(all_data_list, ignore_index=True)
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:1247: FutureWarning: DataFrameGroupBy.apply operated on the grouping columns. This behavior is deprecated, and in a future version of pandas the grouping columns will be excluded from the operation. Either pass `include_groups=False` to exclude the groupings or explicitly select the grouping columns after groupby to silence this warning.
  league_quality_series = df_model_input.groupby('league').apply(
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:1600: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x='importance', y='feature', data=importance_df.head(num_to_plot), palette="viridis")
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:1600: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x='importance', y='feature', data=importance_df.head(num_to_plot), palette="viridis")
[I 2025-08-09 22:10:37,117] A new study created in memory with name: LGBM Home Goals
[I 2025-08-09 22:12:01,850] Trial 0 finished with value: 0.7617892289735891 and parameters: {'n_estimators': 3000, 'learning_rate': 0.09596001797670539, 'num_leaves': 253, 'max_depth': 9, 'min_child_samples': 27, 'feature_fraction': 0.6005024651046237, 'bagging_fraction': 0.768110041606046, 'bagging_freq': 1, 'lambda_l1': 1.6725828090905297e-06, 'lambda_l2': 7.175549936267848e-05}. Best is trial 0 with value: 0.7617892289735891.
[I 2025-08-09 22:13:22,303] Trial 1 finished with value: 0.7569388691111179 and parameters: {'n_estimators': 1100, 'learning_rate': 0.05103340867313549, 'num_leaves': 201, 'max_depth': 9, 'min_child_samples': 71, 'feature_fraction': 0.9096643755819286, 'bagging_fraction': 0.9472304148043982, 'bagging_freq': 1, 'lambda_l1': 3.035737707805343e-06, 'lambda_l2': 5.792012803981331e-06}. Best is trial 1 with value: 0.7569388691111179.
[I 2025-08-09 22:15:49,028] Trial 2 finished with value: 0.7667876258356249 and parameters: {'n_estimators': 2400, 'learning_rate': 0.12341921826347199, 'num_leaves': 188, 'max_depth': 13, 'min_child_samples': 7, 'feature_fraction': 0.996732971022087, 'bagging_fraction': 0.864189131307463, 'bagging_freq': 3, 'lambda_l1': 1.703920662849593e-07, 'lambda_l2': 3.3478245420587855}. Best is trial 1 with value: 0.7569388691111179.
[I 2025-08-09 22:17:14,391] Trial 3 finished with value: 0.7576894636306825 and parameters: {'n_estimators': 1800, 'learning_rate': 0.05497303894383953, 'num_leaves': 246, 'max_depth': 9, 'min_child_samples': 81, 'feature_fraction': 0.9476014728053671, 'bagging_fraction': 0.9842690513620029, 'bagging_freq': 7, 'lambda_l1': 2.7749529257704585e-05, 'lambda_l2': 1.3415723568662594e-06}. Best is trial 1 with value: 0.7569388691111179.
[I 2025-08-09 22:17:42,245] Trial 4 finished with value: 0.7576484168251836 and parameters: {'n_estimators': 1800, 'learning_rate': 0.12950511285624125, 'num_leaves': 57, 'max_depth': 6, 'min_child_samples': 71, 'feature_fraction': 0.8854501606994619, 'bagging_fraction': 0.6707490357897418, 'bagging_freq': 7, 'lambda_l1': 2.594081861623154e-05, 'lambda_l2': 0.00483154801616284}. Best is trial 1 with value: 0.7569388691111179.
[I 2025-08-09 22:18:39,285] Trial 5 finished with value: 0.7569670560860021 and parameters: {'n_estimators': 3000, 'learning_rate': 0.04905799632084677, 'num_leaves': 97, 'max_depth': 7, 'min_child_samples': 90, 'feature_fraction': 0.9028783800376755, 'bagging_fraction': 0.7521319723232618, 'bagging_freq': 3, 'lambda_l1': 0.15124860722496658, 'lambda_l2': 0.04005262499914341}. Best is trial 1 with value: 0.7569388691111179.
[I 2025-08-09 22:20:14,553] Trial 6 finished with value: 0.7590132114922529 and parameters: {'n_estimators': 700, 'learning_rate': 0.06423272082282713, 'num_leaves': 161, 'max_depth': 11, 'min_child_samples': 50, 'feature_fraction': 0.7860498584656801, 'bagging_fraction': 0.8263362470387858, 'bagging_freq': 1, 'lambda_l1': 3.0109967325900434e-05, 'lambda_l2': 1.691234460087868e-07}. Best is trial 1 with value: 0.7569388691111179.
[I 2025-08-09 22:21:15,207] Trial 7 finished with value: 0.7567853342581451 and parameters: {'n_estimators': 1600, 'learning_rate': 0.052627219342931825, 'num_leaves': 42, 'max_depth': 7, 'min_child_samples': 47, 'feature_fraction': 0.8599485344256719, 'bagging_fraction': 0.6077818535639469, 'bagging_freq': 6, 'lambda_l1': 1.5321941259583642, 'lambda_l2': 4.037708479894028e-05}. Best is trial 7 with value: 0.7567853342581451.
[I 2025-08-09 22:24:46,100] Trial 8 finished with value: 0.7567371228117856 and parameters: {'n_estimators': 1000, 'learning_rate': 0.020359649215894587, 'num_leaves': 243, 'max_depth': 9, 'min_child_samples': 77, 'feature_fraction': 0.8481837316442635, 'bagging_fraction': 0.884688356359809, 'bagging_freq': 6, 'lambda_l1': 1.3948449194304712e-08, 'lambda_l2': 3.4819006038981187e-07}. Best is trial 8 with value: 0.7567371228117856.
[I 2025-08-09 22:25:14,897] Trial 9 finished with value: 0.756451879773466 and parameters: {'n_estimators': 2400, 'learning_rate': 0.10974131319004672, 'num_leaves': 220, 'max_depth': 6, 'min_child_samples': 93, 'feature_fraction': 0.924108900160639, 'bagging_fraction': 0.9499229767234991, 'bagging_freq': 1, 'lambda_l1': 0.0008386537956037853, 'lambda_l2': 0.0005938730383598188}. Best is trial 9 with value: 0.756451879773466.
[I 2025-08-09 22:26:20,851] Trial 10 finished with value: 0.7549410040759882 and parameters: {'n_estimators': 2300, 'learning_rate': 0.02161286612344958, 'num_leaves': 114, 'max_depth': 3, 'min_child_samples': 115, 'feature_fraction': 0.7307974714848321, 'bagging_fraction': 0.9102118211688816, 'bagging_freq': 4, 'lambda_l1': 0.00562945937370889, 'lambda_l2': 0.006078281420111022}. Best is trial 10 with value: 0.7549410040759882.
[I 2025-08-09 22:27:26,625] Trial 11 finished with value: 0.7548521843206564 and parameters: {'n_estimators': 2400, 'learning_rate': 0.020071122784515928, 'num_leaves': 129, 'max_depth': 3, 'min_child_samples': 117, 'feature_fraction': 0.7348136918526279, 'bagging_fraction': 0.9265416716584303, 'bagging_freq': 4, 'lambda_l1': 0.0064888968092448145, 'lambda_l2': 0.038456206382179246}. Best is trial 11 with value: 0.7548521843206564.
[I 2025-08-09 22:28:51,562] Trial 12 finished with value: 0.7548742410255617 and parameters: {'n_estimators': 2400, 'learning_rate': 0.016501429822278656, 'num_leaves': 115, 'max_depth': 3, 'min_child_samples': 120, 'feature_fraction': 0.7065321748014022, 'bagging_fraction': 0.9028623763559688, 'bagging_freq': 4, 'lambda_l1': 0.006467389150174459, 'lambda_l2': 0.28285232116179765}. Best is trial 11 with value: 0.7548521843206564.
[I 2025-08-09 22:31:08,202] Trial 13 finished with value: 0.7551601672893442 and parameters: {'n_estimators': 2600, 'learning_rate': 0.010399170087970356, 'num_leaves': 129, 'max_depth': 3, 'min_child_samples': 117, 'feature_fraction': 0.6733870199943157, 'bagging_fraction': 0.9972886727590451, 'bagging_freq': 4, 'lambda_l1': 0.022063612975409416, 'lambda_l2': 1.3574758600238384}. Best is trial 11 with value: 0.7548521843206564.
[I 2025-08-09 22:32:30,128] Trial 14 finished with value: 0.7543465570343076 and parameters: {'n_estimators': 2100, 'learning_rate': 0.02364469330357818, 'num_leaves': 151, 'max_depth': 4, 'min_child_samples': 104, 'feature_fraction': 0.7169092280818621, 'bagging_fraction': 0.8242165813678461, 'bagging_freq': 5, 'lambda_l1': 5.678881953614906, 'lambda_l2': 0.18266817131982976}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:33:34,829] Trial 15 finished with value: 0.7548491058251507 and parameters: {'n_estimators': 2000, 'learning_rate': 0.02916305065416317, 'num_leaves': 160, 'max_depth': 5, 'min_child_samples': 100, 'feature_fraction': 0.7907349773416004, 'bagging_fraction': 0.8174256303685717, 'bagging_freq': 5, 'lambda_l1': 8.759436546342462, 'lambda_l2': 0.09735619935809166}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:34:24,976] Trial 16 finished with value: 0.7549408090270381 and parameters: {'n_estimators': 1500, 'learning_rate': 0.03130769104258063, 'num_leaves': 164, 'max_depth': 5, 'min_child_samples': 99, 'feature_fraction': 0.7964005893803234, 'bagging_fraction': 0.8112345031904388, 'bagging_freq': 5, 'lambda_l1': 8.391539664027253, 'lambda_l2': 1.1743283485949244e-08}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:36:37,874] Trial 17 finished with value: 0.7548101014969697 and parameters: {'n_estimators': 2000, 'learning_rate': 0.029375069987821203, 'num_leaves': 81, 'max_depth': 5, 'min_child_samples': 105, 'feature_fraction': 0.6421210600862474, 'bagging_fraction': 0.7178409981024446, 'bagging_freq': 5, 'lambda_l1': 0.5916806174198207, 'lambda_l2': 0.2986952376125053}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:37:47,904] Trial 18 finished with value: 0.7550421305605008 and parameters: {'n_estimators': 1200, 'learning_rate': 0.033970135213452816, 'num_leaves': 73, 'max_depth': 5, 'min_child_samples': 58, 'feature_fraction': 0.6140833942208245, 'bagging_fraction': 0.7309013062881592, 'bagging_freq': 5, 'lambda_l1': 0.38379383171573606, 'lambda_l2': 8.838808958277422}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:37:59,096] Trial 19 finished with value: 0.7564738316847041 and parameters: {'n_estimators': 2000, 'learning_rate': 0.18129176638870234, 'num_leaves': 99, 'max_depth': 4, 'min_child_samples': 104, 'feature_fraction': 0.6491201859596705, 'bagging_fraction': 0.678898287497931, 'bagging_freq': 6, 'lambda_l1': 0.1525669913153407, 'lambda_l2': 0.0023010495607737585}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:40:28,712] Trial 20 finished with value: 0.7578424520036988 and parameters: {'n_estimators': 400, 'learning_rate': 0.012975924190298107, 'num_leaves': 81, 'max_depth': 11, 'min_child_samples': 88, 'feature_fraction': 0.6603556501499531, 'bagging_fraction': 0.6910117713870249, 'bagging_freq': 3, 'lambda_l1': 1.2946937512427477, 'lambda_l2': 0.6801136912008265}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:41:49,685] Trial 21 finished with value: 0.7550334435922091 and parameters: {'n_estimators': 2100, 'learning_rate': 0.03144679726959971, 'num_leaves': 158, 'max_depth': 5, 'min_child_samples': 105, 'feature_fraction': 0.7612398993893921, 'bagging_fraction': 0.8339459483354725, 'bagging_freq': 5, 'lambda_l1': 7.354692795984087, 'lambda_l2': 0.07047123624101587}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:43:55,368] Trial 22 finished with value: 0.755617380555407 and parameters: {'n_estimators': 2000, 'learning_rate': 0.02691710332395868, 'num_leaves': 182, 'max_depth': 7, 'min_child_samples': 106, 'feature_fraction': 0.6892894503483576, 'bagging_fraction': 0.7811615882229519, 'bagging_freq': 5, 'lambda_l1': 1.3776767952054578, 'lambda_l2': 0.1978167609632069}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:44:54,316] Trial 23 finished with value: 0.7547571863410243 and parameters: {'n_estimators': 2700, 'learning_rate': 0.03752918151535648, 'num_leaves': 144, 'max_depth': 4, 'min_child_samples': 96, 'feature_fraction': 0.8356648226157377, 'bagging_fraction': 0.718826836435266, 'bagging_freq': 6, 'lambda_l1': 0.04098552973916263, 'lambda_l2': 0.03534358060054022}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:45:48,757] Trial 24 finished with value: 0.7559814882754374 and parameters: {'n_estimators': 2700, 'learning_rate': 0.06981511306066132, 'num_leaves': 137, 'max_depth': 4, 'min_child_samples': 84, 'feature_fraction': 0.6398301844433163, 'bagging_fraction': 0.6324765913848851, 'bagging_freq': 6, 'lambda_l1': 0.0433911387678918, 'lambda_l2': 0.0006757465221679821}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:46:45,483] Trial 25 finished with value: 0.7551847988182951 and parameters: {'n_estimators': 2700, 'learning_rate': 0.04034623954343063, 'num_leaves': 35, 'max_depth': 4, 'min_child_samples': 109, 'feature_fraction': 0.843854527297465, 'bagging_fraction': 0.7142569529441563, 'bagging_freq': 7, 'lambda_l1': 0.0005574498304040295, 'lambda_l2': 0.014805803105439075}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:47:43,579] Trial 26 finished with value: 0.7558809806403911 and parameters: {'n_estimators': 1400, 'learning_rate': 0.03970669208863863, 'num_leaves': 144, 'max_depth': 6, 'min_child_samples': 95, 'feature_fraction': 0.7181423932523063, 'bagging_fraction': 0.7382214619358187, 'bagging_freq': 6, 'lambda_l1': 0.478356661154106, 'lambda_l2': 1.6245461805069115}. Best is trial 14 with value: 0.7543465570343076.
[I 2025-08-09 22:48:43,601] Trial 27 finished with value: 0.7542426534404336 and parameters: {'n_estimators': 2800, 'learning_rate': 0.023439426404959718, 'num_leaves': 107, 'max_depth': 4, 'min_child_samples': 67, 'feature_fraction': 0.8208294187543781, 'bagging_fraction': 0.7845359808244037, 'bagging_freq': 5, 'lambda_l1': 0.04607169351467253, 'lambda_l2': 0.2918805218482033}. Best is trial 27 with value: 0.7542426534404336.
[I 2025-08-09 22:53:57,268] Trial 28 finished with value: 0.7565762969621882 and parameters: {'n_estimators': 2800, 'learning_rate': 0.015946596998391856, 'num_leaves': 106, 'max_depth': 14, 'min_child_samples': 63, 'feature_fraction': 0.8180325951611906, 'bagging_fraction': 0.7954181955981705, 'bagging_freq': 6, 'lambda_l1': 0.045202237526919875, 'lambda_l2': 0.01621679952664811}. Best is trial 27 with value: 0.7542426534404336.
[I 2025-08-09 22:58:53,285] Trial 29 finished with value: 0.7563644052778672 and parameters: {'n_estimators': 3000, 'learning_rate': 0.023729627046663208, 'num_leaves': 178, 'max_depth': 8, 'min_child_samples': 32, 'feature_fraction': 0.7536091223645381, 'bagging_fraction': 0.7638540093188956, 'bagging_freq': 2, 'lambda_l1': 0.00016302051762415103, 'lambda_l2': 0.0001583136864770704}. Best is trial 27 with value: 0.7542426534404336.
[I 2025-08-09 22:58:53,288] A new study created in memory with name: LGBM Away Goals
[I 2025-08-09 23:03:12,595] Trial 0 finished with value: 0.8462862502743711 and parameters: {'n_estimators': 1300, 'learning_rate': 0.022920257587789487, 'num_leaves': 127, 'max_depth': 9, 'min_child_samples': 104, 'feature_fraction': 0.678005456744063, 'bagging_fraction': 0.6385987003620315, 'bagging_freq': 7, 'lambda_l1': 1.684134292935223e-06, 'lambda_l2': 7.1990187154352295e-06}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:03:43,812] Trial 1 finished with value: 0.8509911645154876 and parameters: {'n_estimators': 900, 'learning_rate': 0.1586967541328912, 'num_leaves': 189, 'max_depth': 7, 'min_child_samples': 57, 'feature_fraction': 0.6629627390224152, 'bagging_fraction': 0.6393344333161459, 'bagging_freq': 4, 'lambda_l1': 0.9002816570446879, 'lambda_l2': 1.1795141953556687e-05}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:08:27,602] Trial 2 finished with value: 0.8469376212905928 and parameters: {'n_estimators': 1100, 'learning_rate': 0.013843661196391388, 'num_leaves': 105, 'max_depth': 9, 'min_child_samples': 89, 'feature_fraction': 0.9619989758817687, 'bagging_fraction': 0.861000347387392, 'bagging_freq': 4, 'lambda_l1': 1.802475516738664e-05, 'lambda_l2': 5.4735619985746415e-06}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:08:53,564] Trial 3 finished with value: 0.8500783335725444 and parameters: {'n_estimators': 2600, 'learning_rate': 0.19479033734301912, 'num_leaves': 36, 'max_depth': 8, 'min_child_samples': 113, 'feature_fraction': 0.907087795116998, 'bagging_fraction': 0.6377509653841522, 'bagging_freq': 6, 'lambda_l1': 0.3649048615763716, 'lambda_l2': 0.7464787334599502}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:11:26,471] Trial 4 finished with value: 0.8544498209925011 and parameters: {'n_estimators': 800, 'learning_rate': 0.08313302040905005, 'num_leaves': 248, 'max_depth': 14, 'min_child_samples': 28, 'feature_fraction': 0.7372025091046757, 'bagging_fraction': 0.6289309570555635, 'bagging_freq': 5, 'lambda_l1': 0.14813244019374192, 'lambda_l2': 1.0394800064718395e-05}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:21:27,098] Trial 5 finished with value: 0.8531107553991631 and parameters: {'n_estimators': 1000, 'learning_rate': 0.016279897633305958, 'num_leaves': 248, 'max_depth': 14, 'min_child_samples': 17, 'feature_fraction': 0.6464059431255665, 'bagging_fraction': 0.7829034329577792, 'bagging_freq': 3, 'lambda_l1': 0.0003287218979555933, 'lambda_l2': 7.495291529531963e-08}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:21:42,812] Trial 6 finished with value: 0.8506162168268204 and parameters: {'n_estimators': 400, 'learning_rate': 0.19958155971727162, 'num_leaves': 123, 'max_depth': 5, 'min_child_samples': 12, 'feature_fraction': 0.8193964341896606, 'bagging_fraction': 0.7184292281689699, 'bagging_freq': 7, 'lambda_l1': 4.6637931810547173e-05, 'lambda_l2': 0.0031951670564162415}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:22:13,244] Trial 7 finished with value: 0.8486313327127176 and parameters: {'n_estimators': 1300, 'learning_rate': 0.06966771910126979, 'num_leaves': 122, 'max_depth': 7, 'min_child_samples': 83, 'feature_fraction': 0.9814995565772306, 'bagging_fraction': 0.6480126377664551, 'bagging_freq': 6, 'lambda_l1': 3.977398692868726, 'lambda_l2': 0.08524839423779858}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:23:25,178] Trial 8 finished with value: 0.8481400605322319 and parameters: {'n_estimators': 2400, 'learning_rate': 0.035038081859963294, 'num_leaves': 102, 'max_depth': 14, 'min_child_samples': 107, 'feature_fraction': 0.9671319413919908, 'bagging_fraction': 0.6021048878618057, 'bagging_freq': 4, 'lambda_l1': 3.0853788425408043e-07, 'lambda_l2': 5.810241242612131e-07}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:24:20,523] Trial 9 finished with value: 0.8480123540162416 and parameters: {'n_estimators': 1900, 'learning_rate': 0.04724573815022921, 'num_leaves': 211, 'max_depth': 14, 'min_child_samples': 117, 'feature_fraction': 0.9372341011142412, 'bagging_fraction': 0.7150841332424984, 'bagging_freq': 5, 'lambda_l1': 7.376248978039429e-06, 'lambda_l2': 0.005053693216535739}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:26:04,800] Trial 10 finished with value: 0.8467205185537618 and parameters: {'n_estimators': 1800, 'learning_rate': 0.022706900070837765, 'num_leaves': 52, 'max_depth': 11, 'min_child_samples': 56, 'feature_fraction': 0.7438541807813845, 'bagging_fraction': 0.9365885717809855, 'bagging_freq': 1, 'lambda_l1': 4.564773397468723e-08, 'lambda_l2': 2.284753059220936e-08}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:27:42,561] Trial 11 finished with value: 0.8464771951353047 and parameters: {'n_estimators': 1900, 'learning_rate': 0.023056408509948244, 'num_leaves': 42, 'max_depth': 11, 'min_child_samples': 53, 'feature_fraction': 0.7458250990855727, 'bagging_fraction': 0.9693290249783797, 'bagging_freq': 1, 'lambda_l1': 1.3456943057337198e-08, 'lambda_l2': 6.430915233471067e-08}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:30:12,785] Trial 12 finished with value: 0.8483412280250189 and parameters: {'n_estimators': 2100, 'learning_rate': 0.02547101981060106, 'num_leaves': 69, 'max_depth': 10, 'min_child_samples': 39, 'feature_fraction': 0.7179013686362956, 'bagging_fraction': 0.9618881087460358, 'bagging_freq': 1, 'lambda_l1': 1.3470396648802425e-08, 'lambda_l2': 0.00017624654084322962}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:35:50,373] Trial 13 finished with value: 0.846894235841335 and parameters: {'n_estimators': 3000, 'learning_rate': 0.010626271712999432, 'num_leaves': 79, 'max_depth': 11, 'min_child_samples': 78, 'feature_fraction': 0.8476876243547091, 'bagging_fraction': 0.8811876987472785, 'bagging_freq': 2, 'lambda_l1': 4.513537624639755e-07, 'lambda_l2': 4.334568493604217e-07}. Best is trial 0 with value: 0.8462862502743711.
[I 2025-08-09 23:36:52,866] Trial 14 finished with value: 0.8456614235569198 and parameters: {'n_estimators': 1500, 'learning_rate': 0.024752850829477726, 'num_leaves': 168, 'max_depth': 3, 'min_child_samples': 41, 'feature_fraction': 0.6142519908589599, 'bagging_fraction': 0.8028674764674407, 'bagging_freq': 7, 'lambda_l1': 0.0008142088109250375, 'lambda_l2': 1.1309673338947063e-08}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:37:27,493] Trial 15 finished with value: 0.8459922995934205 and parameters: {'n_estimators': 1400, 'learning_rate': 0.04765985963447212, 'num_leaves': 163, 'max_depth': 3, 'min_child_samples': 37, 'feature_fraction': 0.6060662266667025, 'bagging_fraction': 0.7914593192750625, 'bagging_freq': 7, 'lambda_l1': 0.0017881579792372296, 'lambda_l2': 1.0461972026868382e-08}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:38:07,154] Trial 16 finished with value: 0.8457278162494088 and parameters: {'n_estimators': 1500, 'learning_rate': 0.049005321630862096, 'num_leaves': 172, 'max_depth': 3, 'min_child_samples': 35, 'feature_fraction': 0.607978830801696, 'bagging_fraction': 0.7943855055098449, 'bagging_freq': 7, 'lambda_l1': 0.004108993684315785, 'lambda_l2': 4.2095299150922807e-07}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:38:22,263] Trial 17 finished with value: 0.8465541772928532 and parameters: {'n_estimators': 1500, 'learning_rate': 0.0957506181423941, 'num_leaves': 165, 'max_depth': 3, 'min_child_samples': 41, 'feature_fraction': 0.6155466805193612, 'bagging_fraction': 0.8507816479936231, 'bagging_freq': 6, 'lambda_l1': 0.012500686815499045, 'lambda_l2': 3.678942783398818e-07}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:39:03,925] Trial 18 finished with value: 0.8457692640395873 and parameters: {'n_estimators': 500, 'learning_rate': 0.039170850114695246, 'num_leaves': 209, 'max_depth': 5, 'min_child_samples': 70, 'feature_fraction': 0.7021381432367169, 'bagging_fraction': 0.7175352008589722, 'bagging_freq': 5, 'lambda_l1': 0.016066380723200196, 'lambda_l2': 0.00015612758462906124}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:39:26,896] Trial 19 finished with value: 0.84785204628346 and parameters: {'n_estimators': 1600, 'learning_rate': 0.05721472806503959, 'num_leaves': 157, 'max_depth': 5, 'min_child_samples': 24, 'feature_fraction': 0.6374244684649513, 'bagging_fraction': 0.7565151933509662, 'bagging_freq': 6, 'lambda_l1': 0.00046322614392988164, 'lambda_l2': 9.96004295352532e-07}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:40:07,318] Trial 20 finished with value: 0.8462421746074291 and parameters: {'n_estimators': 2300, 'learning_rate': 0.03369161901897378, 'num_leaves': 190, 'max_depth': 4, 'min_child_samples': 43, 'feature_fraction': 0.7830923884176609, 'bagging_fraction': 0.8246162531654916, 'bagging_freq': 7, 'lambda_l1': 0.015617236261173043, 'lambda_l2': 8.762377746441626e-08}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:40:39,404] Trial 21 finished with value: 0.8457658646696335 and parameters: {'n_estimators': 400, 'learning_rate': 0.036402467806618, 'num_leaves': 211, 'max_depth': 5, 'min_child_samples': 69, 'feature_fraction': 0.6891888141144458, 'bagging_fraction': 0.718453958554958, 'bagging_freq': 5, 'lambda_l1': 0.009371244975417524, 'lambda_l2': 0.00018647438048489346}. Best is trial 14 with value: 0.8456614235569198.
[I 2025-08-09 23:41:30,018] Trial 22 finished with value: 0.8452428890617536 and parameters: {'n_estimators': 700, 'learning_rate': 0.02973272010807008, 'num_leaves': 220, 'max_depth': 4, 'min_child_samples': 65, 'feature_fraction': 0.6043276023665759, 'bagging_fraction': 0.7504002710071848, 'bagging_freq': 6, 'lambda_l1': 0.0024154015993141996, 'lambda_l2': 0.0014029307411282236}. Best is trial 22 with value: 0.8452428890617536.
[I 2025-08-09 23:42:01,896] Trial 23 finished with value: 0.8468089712088128 and parameters: {'n_estimators': 800, 'learning_rate': 0.028611607271812094, 'num_leaves': 228, 'max_depth': 3, 'min_child_samples': 6, 'feature_fraction': 0.6041501474589692, 'bagging_fraction': 0.763278961102596, 'bagging_freq': 7, 'lambda_l1': 0.0013007240312865973, 'lambda_l2': 0.003069670503974646}. Best is trial 22 with value: 0.8452428890617536.
[I 2025-08-09 23:43:26,753] Trial 24 finished with value: 0.8470916073153434 and parameters: {'n_estimators': 1200, 'learning_rate': 0.016502265641988784, 'num_leaves': 180, 'max_depth': 4, 'min_child_samples': 29, 'feature_fraction': 0.6382446061601932, 'bagging_fraction': 0.8970264749692561, 'bagging_freq': 6, 'lambda_l1': 0.0001384002043225682, 'lambda_l2': 0.07924846897819855}. Best is trial 22 with value: 0.8452428890617536.
[I 2025-08-09 23:44:06,883] Trial 25 finished with value: 0.8479445088993801 and parameters: {'n_estimators': 700, 'learning_rate': 0.11059221135293795, 'num_leaves': 143, 'max_depth': 6, 'min_child_samples': 48, 'feature_fraction': 0.6620946960355324, 'bagging_fraction': 0.8200742186560734, 'bagging_freq': 7, 'lambda_l1': 0.003027784723642634, 'lambda_l2': 0.0007639673123410901}. Best is trial 22 with value: 0.8452428890617536.
[I 2025-08-09 23:44:40,828] Trial 26 finished with value: 0.8455601180446253 and parameters: {'n_estimators': 1700, 'learning_rate': 0.05901116357165178, 'num_leaves': 226, 'max_depth': 4, 'min_child_samples': 66, 'feature_fraction': 0.6009613175477982, 'bagging_fraction': 0.6795867358233956, 'bagging_freq': 6, 'lambda_l1': 0.07724087958553892, 'lambda_l2': 3.6814057993984894}. Best is trial 22 with value: 0.8452428890617536.
[I 2025-08-09 23:45:05,768] Trial 27 finished with value: 0.8457931919630928 and parameters: {'n_estimators': 1700, 'learning_rate': 0.062173374912448995, 'num_leaves': 229, 'max_depth': 4, 'min_child_samples': 65, 'feature_fraction': 0.6350490216321099, 'bagging_fraction': 0.6791271335877568, 'bagging_freq': 6, 'lambda_l1': 0.054958736186203574, 'lambda_l2': 4.765686596678175}. Best is trial 22 with value: 0.8452428890617536.
[I 2025-08-09 23:46:12,047] Trial 28 finished with value: 0.8461437161791328 and parameters: {'n_estimators': 2200, 'learning_rate': 0.028512033896324226, 'num_leaves': 232, 'max_depth': 6, 'min_child_samples': 97, 'feature_fraction': 0.888086406696316, 'bagging_fraction': 0.6821301088555249, 'bagging_freq': 3, 'lambda_l1': 7.069550433246614, 'lambda_l2': 0.1869916894596944}. Best is trial 22 with value: 0.8452428890617536.
[I 2025-08-09 23:48:20,902] Trial 29 finished with value: 0.8455276828845047 and parameters: {'n_estimators': 600, 'learning_rate': 0.019366022562928874, 'num_leaves': 196, 'max_depth': 6, 'min_child_samples': 77, 'feature_fraction': 0.6807598248766642, 'bagging_fraction': 0.7581283694228459, 'bagging_freq': 5, 'lambda_l1': 0.08661019902290894, 'lambda_l2': 0.020292125444616893}. Best is trial 22 with value: 0.8452428890617536.
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:1841: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x='importance', y='feature', data=importance_df.head(num_to_plot), palette="viridis")
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:1841: FutureWarning: 

Passing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `y` variable to `hue` and set `legend=False` for the same effect.

  sns.barplot(x='importance', y='feature', data=importance_df.head(num_to_plot), palette="viridis")
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2282: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df[col_push] = temp_outcomes_df['push']
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2283: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df[col_half_win] = temp_outcomes_df['half_win']
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2284: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df[col_half_loss] = temp_outcomes_df['half_loss']
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2290: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df[col_name_p_home_covers] = temp_outcomes_df['win'] + \
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2299: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df[col_name_p_away_covers] = temp_outcomes_df['loss'] + \
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2433: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['market_lambda_h'] = market_implied_lambda_h_list
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2434: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['market_lambda_a'] = market_implied_lambda_a_list
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2438: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['market_pred_goal_diff'] = test_matches_df['market_lambda_h'] - test_matches_df['market_lambda_a']
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2461: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['synth_ah_line_home_market_based'] = test_matches_df['market_pred_goal_diff'].apply(get_closest_ah_line)
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2467: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['synth_ah_odds_home_market_based'] = np.where(pd.notna(test_matches_df['synth_ah_line_home_market_based']),
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2469: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['synth_ah_odds_away_market_based'] = np.where(pd.notna(test_matches_df['synth_ah_line_home_market_based']),
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2575: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['ev_synth_home_ah'] = ev_home_ah_list
C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py:2576: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  test_matches_df['ev_synth_away_ah'] = ev_away_ah_list
Traceback (most recent call last):
  File "C:\Users\sduser\Downloads\GBM\gbm_dc_ev_model.py", line 3712, in <module>
    
  File "C:\Python312\Lib\encodings\cp1252.py", line 19, in encode
    return codecs.charmap_encode(input,self.errors,encoding_table)[0]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
UnicodeEncodeError: 'charmap' codec can't encode character '\u0148' in position 1659: character maps to <undefined>
