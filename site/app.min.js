class FilterManager{constructor(e){this.filters=e}applyFilters(e,a="games"){return e.filter(e=>this.matchesDateRange(e,this.filters.dateRange,a)).filter(e=>this.matchesLeague(e,this.filters.league)).filter(e=>this.matchesMinEV(e,this.filters.minEV,a)).filter(e=>this.matchesConfidence(e,this.filters.confidence))}matchesDateRange(e,a,t="games"){var i;return"all"===a||(i=new Date,!!(e=e.datetime)&&(a=parseInt(a),e=(e.getTime()-i.getTime())/864e5,"recommendations"===t?(0,-30/1440<=e&&e<=a):Math.abs(e)<=a))}matchesLeague(e,a){return"all"===a||e.league===a}matchesMinEV(e,a,t="games"){return"recommendations"===t?null!=e.ev&&a<=100*e.ev:!e.hasRecommendation||null==e.ev||a<=100*e.ev}matchesConfidence(e,a){return"all"===a||e.confidence===a}}class GameCard{constructor(e,a={}){this.game=e,this.options={compact:a.compact??!0,showHints:a.showHints??!0,index:a.index??0},this.isExpandable=e.hasRecommendation||e.kingsCall}render(){var e=this.formatTime(this.game.datetime),{}=this.renderAhChips(),a=this.game.ev?(100*this.game.ev).toFixed(1):0,t=.15<this.game.ev?"high":"",i=this.shortenTeamName(this.game.home),s=this.shortenTeamName(this.game.away),n=this.formatAh(this.game.homeLine),r=this.formatAh(this.game.awayLine),o=this.game.hasRecommendation&&this.game.recommendedTeam===this.game.home?"team-picked":"",l=this.game.hasRecommendation&&this.game.recommendedTeam===this.game.away?"team-picked":"";return`
            <div class="game-card game-card--v4" 
                 data-game-id="${this.game.datetime.getTime()}"
                 data-expandable="${this.isExpandable}"
                 data-expanded="false"
                 data-high-ev="${this.game.ev&&.15<this.game.ev?"true":"false"}"
                 data-low-ev="${this.game.ev&&this.game.ev<.05?"true":"false"}">
                
                <div class="game-row">
                    <div class="game-time">${e}</div>
                    <div class="game-matchup-inline">
                        <div class="team-home">
                            <span class="team-ah-inline">${n}</span>
                            <span class="team-name ${o}">${i}</span>
                    </div>
                        <span class="vs-fixed">vs</span>
                        <div class="team-away">
                            <span class="team-name ${l}">${s}</span>
                            <span class="team-ah-inline">${r}</span>
                        </div>
                    </div>
                    <div class="game-meta-right">
                        ${this.game.hasRecommendation&&this.game.ev?`<i data-feather="zap" class="ev-icon ${t}" title="EV ${a}%"></i>`:""}
                    </div>
                </div>
                ${this.isExpandable?this.renderExpansion():""}
            </div>
        `}renderExpansion(){"High"!==this.game.confidence&&this.game.confidence;var e=this.game.ev?(100*this.game.ev).toFixed(1):0,a=.15<this.game.ev?"high":"";return`
            <div class="expanded-details hidden">
                <div class="pick-section flex-balanced">
                    <div class="pick-main flex-grow">
                        <strong>${this.game.recText}</strong>
                    </div>
                    <div class="pick-meta right-aligned">
                        <span class="ev-badge ${a}">EV ${e}%</span>
                    </div>
                </div>
                
                ${this.game.kingsCall?`
                <div class="analysis-content">
                        <p class="analysis-text">${this.game.kingsCall}</p>
                    </div>
                `:""}
            </div>
        `}renderAhChips(){var e,a,t,i;return this.game.hasAhData?(e=this.game.hasRecommendation&&this.game.recommendedTeam===this.game.home,a=this.game.hasRecommendation&&this.game.recommendedTeam===this.game.away,t=this.game.homeLine<0,i=this.game.awayLine<0,e=["ah-chip",this.game.homeLine<0?"ah-chip--neg":0<this.game.homeLine?"ah-chip--pos":"ah-chip--pk",e?"ah-chip--selected":""].filter(Boolean).join(" "),a=["ah-chip",this.game.awayLine<0?"ah-chip--neg":0<this.game.awayLine?"ah-chip--pos":"ah-chip--pk",a?"ah-chip--selected":""].filter(Boolean).join(" "),t=t?"team-name team-favorite":"team-name team-underdog",i=i?"team-name team-favorite":"team-name team-underdog",{homeChip:`<span class="${e}">${this.formatAh(this.game.homeLine)}</span>`,awayChip:`<span class="${a}">${this.formatAh(this.game.awayLine)}</span>`,homeTeamClass:t,awayTeamClass:i}):{homeChip:'<span class="ah-chip ah-chip--empty">—</span>',awayChip:'<span class="ah-chip ah-chip--empty">—</span>'}}renderHint(){var e;return this.game.hasRecommendation&&0<this.game.ev?(e=(100*this.game.ev).toFixed(1),`<span class="game-hint ${.15<this.game.ev?"game-hint--high-ev":"game-hint--active"}" title="Positive EV Pick: ${e}%"><i data-feather="zap"></i></span>`):""}formatTime(e){return e?e.toLocaleTimeString("en-GB",{hour:"2-digit",minute:"2-digit",hour12:!1}):"--:--"}formatAh(e){var a;return 0===e?"0.0":(a=Math.abs(e)%.5==0?1:2,a=e.toFixed(a),0<e?"+"+a:(""+a).replace("-","−"))}shortenTeamName(e){var a,t={"Brighton & Hove Albion":"Brighton","Manchester United":"Man Utd","Manchester City":"Man City","Tottenham Hotspur":"Tottenham","West Ham United":"West Ham","Aston Villa":"Villa","Newcastle United":"Newcastle","Crystal Palace":"Palace","Nottingham Forest":"Forest",Bournemouth:"Bournemouth","Wolverhampton Wanderers":"Wolves","Leicester City":"Leicester","Ipswich Town":"Ipswich",Southampton:"Southampton",Everton:"Everton",Fulham:"Fulham",Brentford:"Brentford",Liverpool:"Liverpool",Chelsea:"Chelsea",Arsenal:"Arsenal","Real Madrid":"Real Madrid",Barcelona:"Barcelona","Atletico Madrid":"Atletico","Athletic Bilbao":"Bilbao","Real Sociedad":"Sociedad",Valencia:"Valencia",Villarreal:"Villarreal",Sevilla:"Sevilla","Real Betis":"Betis","Celta Vigo":"Celta Vigo","Rayo Vallecano":"Rayo","Deportivo Alaves":"Alaves","Las Palmas":"Las Palmas","RCD Espanyol":"Espanyol","RCD Mallorca":"Mallorca","Bayern Munich":"Bayern","Borussia Dortmund":"Dortmund","RB Leipzig":"Leipzig","Bayer Leverkusen":"Leverkusen","Borussia Monchengladbach":"Gladbach","Eintracht Frankfurt":"Frankfurt","VfB Stuttgart":"Stuttgart","SC Freiburg":"Freiburg","TSG Hoffenheim":"Hoffenheim","FC Augsburg":"Augsburg","Werder Bremen":"Bremen","Inter Milan":"Inter","AC Milan":"Milan",Juventus:"Juventus",Napoli:"Napoli",Roma:"Roma",Lazio:"Lazio",Atalanta:"Atalanta",Fiorentina:"Fiorentina","Hellas Verona":"Verona",Udinese:"Udinese",Bologna:"Bologna",Torino:"Torino",Genoa:"Genoa",Como:"Como",Empoli:"Empoli",Parma:"Parma",Cagliari:"Cagliari",Lecce:"Lecce",Venezia:"Venezia",Monza:"Monza","Paris Saint-Germain":"PSG",Monaco:"Monaco",Lyon:"Lyon",Marseille:"Marseille",Lille:"Lille","Olympique Marseille":"Marseille","Olympique Lyonnais":"Lyon","AS Saint-Etienne":"Saint-Etienne","FC Nantes":"Nantes","Stade Rennais":"Rennes","RC Lens":"Lens",Montpellier:"Montpellier","OGC Nice":"Nice","RC Strasbourg":"Strasbourg",Toulouse:"Toulouse",Lorient:"Lorient",Angers:"Angers",Brest:"Brest",Clermont:"Clermont",Troyes:"Troyes","Machida Zelvia":"Machida","Yokohama F. Marinos":"Yokohama","Kashiwa Reysol":"Kashiwa","Vissel Kobe":"Vissel","Sanfrecce Hiroshima":"Hiroshima","Kyoto Sanga":"Kyoto","FC Tokyo":"FC Tokyo","Kawasaki Frontale":"Kawasaki","Cerezo Osaka":"Cerezo","Gamba Osaka":"Gamba","Urawa Red Diamonds":"Urawa","Nagoya Grampus":"Nagoya","Avispa Fukuoka":"Fukuoka","Shonan Bellmare":"Shonan","Albirex Niigata":"Niigata","Consadole Sapporo":"Sapporo","Jubilo Iwata":"Iwata","Kashima Antlers":"Kashima"},i=e.toLowerCase();for(a in t)if(a.toLowerCase()===i)return t[a];return e.replace(/ & Hove Albion/g,"").replace(/ United/g," Utd").replace(/ City/g," City").replace(/ Hotspur/g,"").replace(/ F\. Marinos/g,"").replace(/ Saint-Germain/g,"").replace(/ Marseille/g,"").replace(/Olympique /g,"").replace(/FC /g,"").replace(/AS /g,"").replace(/RC /g,"").replace(/OGC /g,"").replace(/Stade /g,"").replace(/ Zelvia/g,"").replace(/ Reysol/g,"").replace(/ Hiroshima/g,"").replace(/ Sanga/g,"").trim()}}class DayNavigator{constructor(e){this.parlayKing=e}getDaysWithGames(){var e=new Date,a=new Date(e.getFullYear(),e.getMonth(),e.getDate()),t=[];for(let e=0;e<4;e++){var i=new Date(a);i.setDate(a.getDate()+e),t.push(i)}return t}setupSwipeGestures(r){if("undefined"==typeof Hammer)console.warn("Hammer.js not loaded, falling back to touch events"),this.setupFallbackSwipeGestures(r);else{var e=new Hammer(r);e.get("pan").set({direction:Hammer.DIRECTION_HORIZONTAL,threshold:10});let a=0;e.on("panstart",e=>{a=r.scrollLeft}),e.on("pan",e=>{r.scrollLeft=a-e.deltaX}),e.on("panend",e=>{var a=parseInt(this.parlayKing.uiState.currentDay)||0,t=e.velocityX,e=e.deltaX;let n=a;if(50<Math.abs(e)||.3<Math.abs(t))n=e<0?Math.min(3,a+1):Math.max(0,a-1);else{t=r.querySelectorAll(".day-tab");let i=null,s=1/0;t.forEach(e=>{var a=e.getBoundingClientRect(),t=r.getBoundingClientRect(),a=a.left+a.width/2,t=t.left+t.width/2,a=Math.abs(a-t);a<s&&(s=a,i=e)}),i&&(n=parseInt(i.dataset.day))}this.parlayKing.switchDay(n.toString())})}}setupFallbackSwipeGestures(a){let i=0,t=0;a.addEventListener("touchstart",e=>{i=e.touches[0].pageX,t=a.scrollLeft},{passive:!0}),a.addEventListener("touchmove",e=>{e=e.touches[0].pageX-i;a.scrollLeft=t-e},{passive:!0}),a.addEventListener("touchend",a=>{var a=a.changedTouches[0].pageX,a=i-a,t=parseInt(this.parlayKing.uiState.currentDay)||0;if(50<Math.abs(a)){let e=t;e=0<a?Math.min(3,t+1):Math.max(0,t-1),this.parlayKing.switchDay(e.toString())}},{passive:!0})}render(){var e=this.getDaysWithGames();if(0===e.length)return'<div class="day-navigator"><div class="no-upcoming-games">No upcoming games</div></div>';(parseInt(this.parlayKing.uiState.currentDay)||0)>=e.length&&(this.parlayKing.uiState.currentDay="0");(new Date).setHours(0,0,0,0);e=`
            <div class="day-navigator">
                ${e.map((e,a)=>{var t=new Date,t=new Date(t.getFullYear(),t.getMonth(),t.getDate()),i=new Date(t);i.setDate(t.getDate()+1);let s;return e.getTime()===t.getTime()?(s="Today",`
                            <button class="day-tab today ${this.parlayKing.uiState.currentDay===a.toString()?"active":""}" 
                                    data-day="${a}" onclick="window.parlayKing.switchDay('${a}')">
                                ${s}
                            </button>
                        `):(s=e.getTime()===i.getTime()?"Tomorrow":e.toLocaleDateString("en-US",{weekday:"short"})+` ${e.getDate()} `+e.toLocaleDateString("en-US",{month:"short"}),`
                        <button class="day-tab ${this.parlayKing.uiState.currentDay===a.toString()?"active":""}" 
                                data-day="${a}" onclick="window.parlayKing.switchDay('${a}')">
                            ${s}
                        </button>
                    `)}).join("")}
            </div>
        `;return setTimeout(()=>{var e=document.querySelector(".day-navigator");e&&(this.setupSwipeGestures(e),setTimeout(()=>this.parlayKing.centerActiveDayTab(),100))},50),e}}class ParlayKing{constructor(){this.cache=new Map,this.data={metrics:{},pnlByMonth:[],bankrollSeries:[],recommendations:[],roiHeatmap:[],topSegments:[],settledBets:[],parlayWins:[],unifiedGames:null},this.uiState={viewMode:window.innerWidth<=768?"mobile":"desktop",expandedCards:new Set,activeFilters:this.getFiltersFromURL(),currentDay:"0",filtersDrawerOpen:!1,renderedGames:20,virtualScrollOffset:0},this.renderQueue=[],this.isRendering=!1,this.cardInstances=new Map,this.dayNavigator=new DayNavigator(this),this.filterManager=new FilterManager(this.uiState.activeFilters),this.parlayPage=0,this.version=window.__PK_VERSION||"latest",this.init()}async init(){if(this.showLoading(!0),"serviceWorker"in navigator)try{await navigator.serviceWorker.register("/sw.js"),console.log("Service Worker registered successfully")}catch(e){console.log("Service Worker registration failed:",e)}await this.loadAllData(),this.initializeUI(),this.updateUI(),this.showLoading(!1)}async loadCSV(a,e=!0){window.Papa||await new Promise(e=>{var a=document.createElement("script");a.src="https://unpkg.com/papaparse@5.4.1/papaparse.min.js",a.onload=e,document.head.appendChild(a)});var t="csv_"+a;if(e&&this.cache.has(t))return this.cache.get(t);try{var i,s,n=await fetch(a+"?t="+Date.now());if(n.ok)return i=await n.text(),s=Papa.parse(i,{header:!0,dynamicTyping:!0,skipEmptyLines:!0}).data,this.cache.set(t,s),s;throw new Error(`Failed to load ${a}: `+n.status)}catch(e){return console.warn(`Failed to load ${a}:`,e),this.cache.get(t)||[]}}async loadAllData(){try{var[e,a,t,i,s,n]=await Promise.all([this.loadCSV("metrics.csv").catch(()=>[]),this.loadCSV("latest_recommendations.csv").catch(()=>[]),this.loadCSV("unified_games.csv").catch(()=>[]),this.loadCSV("roi_heatmap.csv").catch(()=>[]),this.loadCSV("top_segments.csv").catch(()=>[]),this.loadCSV("parlay_wins.csv").catch(()=>[])]);this.data={...this.data,metrics:this.parseMetrics(e||[]),recommendations:this.parseRecommendations(a||[]),unifiedGames:this.parseUnifiedGames(t||[]),roiHeatmap:this.parseRoiHeatmap(i||[]),topSegments:this.parseTopSegments(s||[]),parlayWins:this.parseParlayWins(n||[])},this.populateFilterOptions(),console.log("Data loaded successfully:",{metrics:Object.keys(this.data.metrics).length,recommendations:this.data.recommendations.length,unifiedGames:this.data.unifiedGames.length,roiHeatmap:this.data.roiHeatmap.length,topSegments:this.data.topSegments.length,parlayWins:this.data.parlayWins.length})}catch(e){console.error("Failed to load data:",e),this.showError("Failed to load dashboard data. Please try refreshing the page.")}}parseMetrics(e){let a={};return Array.isArray(e)&&e.forEach(e=>{e&&e.metric&&null!==e.value&&(a[e.metric]=e.value)}),a}parseRecommendations(e){return Array.isArray(e)?e.filter(e=>e&&e.dt_gmt8&&e.home&&e.away).map(e=>({datetime:this.parseGmt8(e.dt_gmt8),league:e.league||"",home:e.home,away:e.away,recommendation:e.rec_text||"",line:parseFloat(e.line)||0,odds:parseFloat(e.odds)||0,ev:parseFloat(e.ev)||0,confidence:e.confidence||"Medium",kingsCall:e.kings_call_insight||""})).filter(e=>e.datetime).sort((e,a)=>e.datetime-a.datetime):[]}parseUnifiedGames(e){return Array.isArray(e)&&0!==e.length?e.filter(e=>e&&e.datetime_gmt8&&e.home_name&&e.away_name).map(e=>{var a=this.parseGmt8(e.datetime_gmt8);return a?(a={datetime:a,league:e.league||"",leagueShort:e.league_short||e.league||"",leagueFlag:e.league_flag||"⚽",home:e.home_name,away:e.away_name,odds1:parseFloat(e.odds_1)||0,oddsX:parseFloat(e.odds_x)||0,odds2:parseFloat(e.odds_2)||0,tier:parseInt(e.league_tier)||3,hasRecommendation:"True"===e.has_recommendation,recText:e.rec_text||"",recOdds:parseFloat(e.rec_odds)||0,ev:parseFloat(e.ev)||0,confidence:e.confidence||"",kingsCall:e.kings_call||"",primarySignal:e.primary_signal||"",ah_line_home:e.ah_line_home,ah_line_away:e.ah_line_away,ah_odds_home:e.ah_odds_home,ah_odds_away:e.ah_odds_away},e=this.parseAsianHandicapData(a),{...a,...e}):null}).filter(Boolean).sort((e,a)=>e.datetime-a.datetime):[]}parseAsianHandicapData(e){let a=null,t=null,i=null;var s,n,r,o;return null!=e.ah_line_home&&(a=parseFloat(e.ah_line_home)),null!=e.ah_line_away&&(t=parseFloat(e.ah_line_away)),(null===a||null===t)&&e.hasRecommendation&&e.recText&&(n=e.recText.match(/^(.+?)\s+([-+]?\d*\.?\d+)$/))&&(s=n[1].trim().toLowerCase(),n=parseFloat(n[2]),r=e.home.toLowerCase(),o=e.away.toLowerCase(),s===r||r.includes(s)||s.includes(r.split(" ")[0])?(i=e.home,a=n,t=-n):(s===o||o.includes(s)||s.includes(o.split(" ")[0]))&&(i=e.away,t=n,a=-n)),null===a&&(a=0),null===t&&(t=0),{recommendedTeam:i,homeLine:a,awayLine:t,isPk:0===a&&0===t,hasAhData:!0}}parseRoiHeatmap(e){return Array.isArray(e)?e.map(e=>{var a,t;return void 0===e.tier||void 0===e.line||void 0===e.roi_pct||void 0===e.n?null:(a=`Tier ${e.tier} (Line: ${e.line})`,t=parseFloat(e.roi_pct)/100,e=parseInt(e.n),{segment:a,roi:isNaN(t)?0:t,count:isNaN(e)?0:e})}).filter(e=>null!==e&&0<e.count):[]}parseTopSegments(e){return Array.isArray(e)?e.map(e=>({tier:parseInt(e.tier)||0,line:parseFloat(e.line)||0,segment:`Tier ${e.tier} | Line `+(0<e.line?"+":"")+e.line,roi:parseFloat(e.roi_pct)/100||0,count:parseInt(e.n)||0})).filter(e=>0<e.count):[]}parseParlayWins(e){return Array.isArray(e)?e.filter(e=>e&&e.date&&e.payout):[]}parseGmt8(e){if(!e)return null;try{var[a,t="00:00:00"]=String(e).split(" "),[i,s,n]=a.split("-").map(Number),[r,o,l]=t.split(":").map(Number),d=Date.UTC(i,(s||1)-1,n||1,(r||0)-8,o||0,l||0);return new Date(d)}catch(e){return null}}isSameDay(e,a){return e.getFullYear()===a.getFullYear()&&e.getMonth()===a.getMonth()&&e.getDate()===a.getDate()}getFiltersFromURL(){var e=new URLSearchParams(window.location.search);return{dateRange:e.get("dateRange")||"30",league:e.get("league")||"all",minEV:parseFloat(e.get("minEV"))||0,confidence:e.get("confidence")||"all"}}updateURLParams(){var e=new URLSearchParams(window.location.search);e.set("day",this.uiState.currentDay),e.set("dateRange",this.uiState.activeFilters.dateRange),e.set("league",this.uiState.activeFilters.league),e.set("minEV",this.uiState.activeFilters.minEV.toString()),e.set("confidence",this.uiState.activeFilters.confidence),history.replaceState(null,"",window.location.pathname+"?"+e.toString())}getCurrentPage(){var e=window.location.pathname;return e.includes("analytics.html")?"analytics":e.includes("recommendations.html")?"recommendations":"overview"}initializeUI(){this.setupEventListeners(),this.setFilterValues(),this.setupHeaderShrinking(),this.setupPullToRefresh();var e=this.getCurrentPage();console.log("Initializing UI for page: "+e),"overview"!==e&&("analytics"===e?this.initAnalyticsPage():"recommendations"===e&&this.initRecommendationsPage())}setupPullToRefresh(){let i=document.getElementById("pull-refresh-container");if(i&&window.innerWidth<=768){let a=0,t=0;i.addEventListener("touchstart",e=>{a=e.touches[0].pageY},{passive:!0}),i.addEventListener("touchmove",e=>{0<(t=e.touches[0].pageY-a)&&0===window.scrollY&&(e.preventDefault(),i.classList.add("pulling"),i.style.setProperty("--pull-distance",Math.min(t,100)+"px"))},{passive:!1}),i.addEventListener("touchend",async()=>{i.classList.remove("pulling"),80<t&&(i.classList.add("refreshing"),await this.loadAllData(),this.updateUI(),setTimeout(()=>i.classList.remove("refreshing"),1e3)),t=0})}}setupHeaderShrinking(){let t=document.querySelector(".nav-container"),i=document.querySelector(".day-navigator");if(t){let e=()=>{var e=window.scrollY,a=(50<e?t.classList.add("shrunk"):t.classList.remove("shrunk"),t.offsetHeight);document.documentElement.style.setProperty("--header-height",a+"px"),i&&(0<e?i.classList.add("sticky-active"):i.classList.remove("sticky-active"))},a=!1;e(),window.addEventListener("scroll",()=>{a||(window.requestAnimationFrame(()=>{e(),a=!1}),a=!0)},{passive:!0}),window.addEventListener("resize",e)}}setupDayNavigationListeners(){document.querySelectorAll(".day-tab").forEach(a=>{a.addEventListener("click",e=>{e.preventDefault();e=a.dataset.day;void 0!==e&&(this.uiState.currentDay=e,this.updateUI())})})}setupEventListeners(){var e=document.getElementById("date-range"),e=(e&&e.addEventListener("change",e=>{this.uiState.activeFilters.dateRange=e.target.value,this.updateUI()}),document.getElementById("league-filter"));e&&e.addEventListener("change",e=>{this.uiState.activeFilters.league=e.target.value,this.updateUI()}),this.initRecommendationsPage(),window.innerWidth<=768&&this.initFiltersDrawer()}initRecommendationsPage(){this.setDefaultFiltersForRecommendations(),this.initEvSlider(),this.setupLeagueFilter("league-filter-recs")}initAnalyticsPage(){console.log("Initializing Analytics Page..."),this.renderRoiHeatmap(),this.renderTopSegments(),this.renderParlayWins(),this.setupAnalyticsFilters()}renderRoiHeatmap(){var e,a=document.getElementById("roi-heatmap");a?this.data.roiHeatmap&&0!==this.data.roiHeatmap.length?(console.log(`Rendering ROI Heatmap with ${this.data.roiHeatmap.length} items.`),e=[...this.data.roiHeatmap].sort((e,a)=>a.roi-e.roi).map(e=>{var a=(100*e.roi).toFixed(1);let t="heat-mid";return.05<e.roi?t="heat-pos":e.roi<-.05&&(t="heat-neg"),`
                <div class="heatmap-cell ${t}">
                    <div class="heatmap-value">${a}%</div>
                    <div class="heatmap-meta">
                        <strong>${e.segment}</strong><br>
                        <small>Bets: ${e.count}</small>
                    </div>
                </div>
            `}).join(""),a.innerHTML=`<div class="heatmap-grid">${e}</div>`):a.innerHTML='<p class="empty-state">No ROI Heatmap data available.</p>':console.warn("ROI Heatmap container (roi-heatmap) not found in HTML.")}renderTopSegments(){var e,a=document.getElementById("top-segments-container");a?this.data.topSegments&&0!==this.data.topSegments.length?(console.log(`Rendering Top Segments with ${this.data.topSegments.length} items.`),e=[...this.data.topSegments].sort((e,a)=>a.roi-e.roi).slice(0,10).map(e=>{var a=(100*e.roi).toFixed(1),t=0<e.line?"+"+e.line:""+e.line;return`
                <div class="segment-pill">
                    <div class="pill-top">
                        <span class="line-text">${a}% ROI</span>
                        <span class="segment-name">${e.segment}</span>
                    </div>
                    <div class="pill-bottom">
                        <span>Line: ${t}</span>
                        <span>Bets: ${e.count}</span>
                    </div>
                </div>
            `}).join(""),a.innerHTML=`<div class="segments-pills">${e}</div>`):a.innerHTML='<p class="empty-state">No Top Segments data available.</p>':console.log("Top segments container not found, skipping...")}renderParlayWins(){var e,a,t=document.getElementById("parlay-grid");t&&(this.data.parlayWins&&0!==this.data.parlayWins.length?(console.log(`Rendering Parlay Wins with ${this.data.parlayWins.length} items.`),e=document.getElementById("total-parlays"),a=document.getElementById("max-payout"),e&&(e.textContent=this.data.parlayWins.length),e=Math.max(...this.data.parlayWins.map(e=>parseFloat(e.payout)||0)),a&&(a.textContent="$"+e.toFixed(0)),a=this.data.parlayWins.map(e=>`
            <div class="parlay-item">
                <div class="parlay-date">${e.date}</div>
                <div class="parlay-payout">$${parseFloat(e.payout).toFixed(0)}</div>
                <div class="parlay-details">${e.details||"Multi-leg parlay win"}</div>
            </div>
        `).join(""),t.innerHTML=a):t.innerHTML='<p class="empty-state">No parlay wins data available.</p>')}setupAnalyticsFilters(){var e=document.getElementById("date-range-analytics");e&&e.addEventListener("change",e=>{this.uiState.activeFilters.dateRange=e.target.value,console.log("Analytics Date Range changed (Note: Dynamic filtering may not be fully supported yet).")})}setDefaultFiltersForRecommendations(){this.uiState.activeFilters.dateRange="7",this.uiState.activeFilters.confidence="all"}setupLeagueFilter(e){var a=document.getElementById(e);a&&(this.populateLeagueOptions(e),a.addEventListener("change",e=>{this.uiState.activeFilters.league=e.target.value,this.updateUI()}))}populateLeagueOptions(e){let t=document.getElementById(e);if(t&&this.data.recommendations){for(var a=[...new Set(this.data.recommendations.map(e=>e.league))].filter(Boolean).sort();1<t.children.length;)t.removeChild(t.lastChild);a.forEach(e=>{var a=document.createElement("option");a.value=e,a.textContent=e,t.appendChild(a)}),console.log(`Populated ${a.length} leagues in ${e}:`,a)}}initEvSlider(){let i=document.getElementById("min-ev-slider"),s=document.getElementById("min-ev-value"),n=document.querySelectorAll(".slider-labels .slider-label");if(i&&s){let a=e=>{let t=parseFloat(e);var a=t.toFixed(0),e=(i.value=e,s.textContent=a+"%",(this.uiState.activeFilters.minEV=t)/50*100);i.style.setProperty("--slider-progress",e+"%"),n.forEach(e=>{var a=parseFloat(e.dataset.value);e.classList.toggle("active",a<=t)})},t=()=>{this.updateUI()};var e=this.uiState.activeFilters.minEV||0;a(e),i.addEventListener("input",e=>{a(e.target.value)}),i.addEventListener("change",t),n.forEach(e=>{e.addEventListener("click",()=>{a(e.dataset.value),t()})})}}initFiltersDrawer(){var e=document.getElementById("filters-drawer-btn"),a=document.getElementById("filters-drawer");e&&a&&(e.addEventListener("click",()=>this.openFiltersDrawer()),(a=document.getElementById("filters-drawer-close"))&&a.addEventListener("click",()=>this.closeFiltersDrawer()),e=document.getElementById("filters-drawer-overlay"))&&e.addEventListener("click",()=>this.closeFiltersDrawer())}openFiltersDrawer(){var e=document.getElementById("filters-drawer");e&&(e.classList.add("open"),this.uiState.filtersDrawerOpen=!0,document.body.style.overflow="hidden")}closeFiltersDrawer(){var e=document.getElementById("filters-drawer");e&&(e.classList.remove("open"),this.uiState.filtersDrawerOpen=!1,document.body.style.overflow="")}setFilterValues(){var e=document.getElementById("date-range"),e=(e&&(e.value=this.uiState.activeFilters.dateRange),document.getElementById("league-filter"));e&&(e.value=this.uiState.activeFilters.league)}populateFilterOptions(){var e=[...new Set(this.data.recommendations.map(e=>e.league))].filter(Boolean).sort();let t=document.getElementById("league-filter");if(t){for(;1<t.children.length;)t.removeChild(t.lastChild);e.forEach(e=>{var a=document.createElement("option");a.value=e,a.textContent=e,t.appendChild(a)})}}updateUI(){var e;this.updateKPIs(),this.renderUnifiedSchedule(),this.renderRecommendations(),this.updateLastRunStatus(),this.populateFilterOptions(),this.populateLeagueOptions("league-filter-recs"),"undefined"==typeof feather?((e=document.createElement("script")).src="https://unpkg.com/feather-icons",e.onload=()=>feather.replace(),document.head.appendChild(e)):setTimeout(()=>feather.replace(),200),this.switchDay(this.uiState.currentDay||"0")}updateKPIs(){try{var e=document.getElementById("win-rate"),a=(e&&(e.textContent=64.91.toFixed(1)+"%"),document.getElementById("roi-performance")),t=(a&&(a.textContent=`+${23.81.toFixed(1)}%`),document.getElementById("non-losing-rate")),i=(t&&(t.textContent=68.15.toFixed(1)+"%"),document.getElementById("total-bets"));i&&(i.textContent=this.data.recommendations?.length||0)}catch(e){console.warn("Error updating KPIs:",e)}}renderUnifiedSchedule(){try{var e=document.getElementById("unified-games-container");if(e)if(this.data.unifiedGames&&0!==this.data.unifiedGames.length){this.ensureValidCurrentDay();var a,t,i,s=document.getElementById("day-navigator-container");s&&!s.querySelector(".day-navigator")&&(a=this.dayNavigator.render(),s.innerHTML=a,this.setupDayNavigationListeners(),this.centerActiveDayTab()),this.data.unifiedGames&&0!==this.data.unifiedGames.length?0===(t=this.getFilteredGamesByDay()).length?e.innerHTML='<div class="no-games">No games found for the selected day.</div>':(i=this.groupGamesByLeague(t),e.innerHTML=this.renderLeagueGroups(i),"undefined"!=typeof feather?(feather.replace(),console.log("Feather icons replaced after rendering schedule")):console.warn("Feather not loaded"),this.initGameCardInteractions()):e.innerHTML='<div class="no-games">No games available.</div>'}else{let a="";for(let e=0;e<3;e++)a+=`
                        <div class="tier-group skeleton-group">
                            <div class="tier-group-header skeleton-header"></div>
                            <div class="games-list">
                                ${Array(4).fill(0).map(()=>'<div class="game-card skeleton-card"></div>').join("")}
                            </div>
                        </div>
                    `;void(e.innerHTML=a)}else console.warn("Unified games container not found")}catch(e){console.error("Error rendering schedule:",e)}}ensureValidCurrentDay(){var e=this.dayNavigator.getDaysWithGames();((parseInt(this.uiState.currentDay)||0)>=e.length||0===e.length)&&(this.uiState.currentDay="0")}renderRecommendations(){try{var e,a=document.getElementById("recommendations-cards");a&&(this.data.recommendations&&0!==this.data.recommendations.length?0===(e=this.filterManager.applyFilters(this.data.recommendations,"recommendations")).length?a.innerHTML='<div class="no-recommendations">No recommendations match your filters.</div>':a.innerHTML=e.map(e=>this.renderRecommendationCard(e)).join(""):a.innerHTML='<div class="no-recommendations">No recommendations available.</div>')}catch(e){console.error("Error rendering recommendations:",e)}}renderRecommendationCard(e){var a=e.datetime?e.datetime.toLocaleTimeString("en-GB",{hour:"2-digit",minute:"2-digit",hour12:!1}):"--:--",t=e.ev?`+${(100*e.ev).toFixed(1)}%`:"--",i="High"===e.confidence?'<i data-feather="award"></i>':"Medium"===e.confidence?'<i data-feather="star"></i>':'<i data-feather="circle"></i>',s=["rec-card"];return e.ev&&.15<e.ev&&s.push("high-ev"),`
            <div class="${s.join(" ")}">
                <div class="rec-header">
                    <div class="rec-time">${a}</div>
                    <div class="rec-confidence" title="${e.confidence}">${i}</div>
                </div>
                <div class="rec-matchup">
                    <h4>${e.home} vs ${e.away}</h4>
                    <div class="rec-league">${e.league}</div>
                </div>
                <div class="rec-pick">
                    <div class="pick-text" onclick="navigator.clipboard.writeText('${e.recommendation.replace(/'/g,"\\'")}'); this.style.transform='scale(0.95)'; setTimeout(() => this.style.transform='', 150);" title="Click to copy recommendation">${e.recommendation}</div>
                </div>
                <div class="rec-footer">
                    <div class="ev-badge">EV ${t}</div>
                    ${e.kingsCall?`<button class="show-analysis-btn" onclick="this.nextElementSibling.classList.toggle('hidden')">Analysis</button>
                    <div class="analysis-content hidden">${e.kingsCall}</div>`:""}
                </div>
            </div>
        `}getFilteredGamesByDay(){var e=[...this.data.unifiedGames||[]],e=this.filterByDay(e,this.uiState.currentDay);return(e=this.filterManager.applyFilters(e,"games")).sort((e,a)=>e.datetime-a.datetime)}filterByDay(t,e){var a=this.dayNavigator.getDaysWithGames(),e=(console.log("DEBUG: filterByDay called with dayIndex:",e),console.log("DEBUG: daysWithGames:",a.map(e=>e.toISOString())),console.log("DEBUG: games count:",t.length),0<t.length&&console.log("DEBUG: first game datetime:",t[0].datetime?.toISOString()),parseInt(e));if(isNaN(e)||e<0||e>=a.length)return t;let i=a[e];console.log("DEBUG: selectedDay:",i.toISOString());a=t.filter(e=>{var a=this.isSameDay(e.datetime,i);return!a&&t.indexOf(e)<3&&console.log("DEBUG: Game mismatch - game:",e.datetime?.toISOString(),"vs selectedDay:",i.toISOString()),a});return console.log("DEBUG: filtered games count:",a.length),a}groupGamesByLeague(s){let e={};return[...new Set(s.map(e=>e.league))].sort((a,t)=>{var e,i;return"England Premier League"===a?-1:"England Premier League"===t?1:(e=s.find(e=>e.league===a)?.tier||3)!==(i=s.find(e=>e.league===t)?.tier||3)?e-i:a.localeCompare(t)}).forEach(a=>{e[a]=s.filter(e=>e.league===a).sort((e,a)=>e.datetime-a.datetime)}),e}renderLeagueGroups(e){return Object.entries(e).map(([e,a])=>this.renderTierGroup(e,a)).join("")}renderTierGroup(e,a){return`
            <div class="tier-group">
                <div class="tier-group-header">
                    <h4>${this.getLeagueFlag(e)} ${e}</h4>
                    <span class="game-count">${a.length} games</span>
                </div>
                <div class="games-list">
                    ${a.map((e,a)=>this.renderGameCard(e,a)).join("")}
                </div>
            </div>
        `}getLeagueFlag(e){return{"England Premier League":"🇬🇧","Spain La Liga":"🇪🇸","Italy Serie A":"🇮🇹","Germany Bundesliga":"🇩🇪","France Ligue 1":"🇫🇷","Netherlands Eredivisie":"🇳🇱","Portugal Primeira Liga":"🇵🇹","Belgium Pro League":"🇧🇪","Scotland Premiership":"🇬🇧","Turkey Super Lig":"🇹🇷","Brazil Serie A":"🇧🇷","Argentina Primera Division":"🇦🇷","Mexico Liga MX":"🇲🇽","USA MLS":"🇺🇸","Japan J1 League":"🇯🇵","South Korea K League 1":"🇰🇷","Australia A-League":"🇦🇺","England Championship":"🇬🇧","Denmark Superliga":"🇩🇰","Saudi Arabia Professional League":"🇸🇦","Portugal Liga NOS":"🇵🇹"}[e]||"⚽"}renderGameCard(e,a){var t=new GameCard(e,{compact:"mobile"===this.uiState.viewMode,showHints:!0,index:a});return this.cardInstances.set(e.datetime.getTime()+"-"+a,t),t.render()}switchDay(a){this.uiState.currentDay=a.toString(),this.updateURLParams(),document.querySelectorAll(".day-tab").forEach(e=>{e.classList.toggle("active",e.dataset.day===a.toString())}),this.renderUnifiedSchedule(),this.centerActiveDayTab()}centerActiveDayTab(){requestAnimationFrame(()=>{let e=document.querySelector(".day-tab.active");var a,t,i,s,n=document.querySelector(".day-navigator");e&&n?(console.log("Centering tab:",e.textContent,"Current scroll:",n.scrollLeft),n.offsetHeight,e.offsetLeft,a=e.offsetLeft,t=e.offsetWidth,s=a-(i=n.offsetWidth)/2+t/2,console.log("Scroll calculation:",{tabLeft:a,tabWidth:t,navWidth:i,scrollPosition:s,finalPosition:Math.max(0,s)}),n.scrollTo({left:Math.max(0,s),behavior:"smooth"}),e.style.transform="scale(1.05)",setTimeout(()=>{e.style.transform=""},200)):console.warn("centerActiveDayTab: Missing elements",{activeTab:!!e,navigator:!!n})})}toggleAnalysis(e){var a=e.nextElementSibling,t="true"===e.getAttribute("aria-expanded");a.classList.toggle("hidden",t),e.setAttribute("aria-expanded",!t);let i=e.closest(".expanded-details");a=e.closest(".game-card");i&&a&&"true"===a.getAttribute("data-expanded")&&i.style.maxHeight&&requestAnimationFrame(()=>{i.style.maxHeight=i.scrollHeight+"px"})}toggleGameExpansion(e){var a=e.dataset.gameId;let t=e.querySelector(".expanded-details");t&&(this.uiState.expandedCards.has(a)?(this.uiState.expandedCards.delete(a),t.style.maxHeight="0",e.setAttribute("data-expanded","false"),setTimeout(()=>{t.classList.add("hidden"),t.classList.remove("fade-in"),t.style.maxHeight=""},300)):(this.uiState.expandedCards.add(a),t.classList.remove("hidden"),e.setAttribute("data-expanded","true"),t.style.maxHeight="0",requestAnimationFrame(()=>{t.classList.add("fade-in"),t.style.maxHeight=t.scrollHeight+"px"})))}initGameCardInteractions(){setTimeout(()=>{document.querySelectorAll('.game-card--v4[data-expandable="true"]').forEach(e=>{console.log("Adding listener to expandable card");let a=e.cloneNode(!0);e.parentNode.replaceChild(a,e),a.addEventListener("click",e=>{e.target.closest(".ah-chip")||e.target.closest(".game-hint")||e.target.closest(".analysis-toggle")||(console.log("Card clicked, toggling expansion"),this.toggleGameExpansion(a))}),a.setAttribute("tabindex","0"),a.addEventListener("keydown",e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.toggleGameExpansion(a))})})},100)}updateLastRunStatus(){var e=this.data.metrics.finished_at||this.data.metrics.started_at;e&&console.log("Last run: "+this.formatTimeAgo(e))}formatTimeAgo(e){var a;return e?(e=new Date(e),a=new Date,(a=Math.floor((a-e)/36e5))<1?"Just now":a<24?a+"h ago":Math.floor(a/24)+"d ago"):"--"}showLoading(e){var a=document.getElementById("loading-overlay");a&&(e?a.classList.remove("hidden"):a.classList.add("hidden"))}showError(e){console.error(e)}shareGame(a){var e=this.data.unifiedGames.find(e=>e.datetime.getTime()===a);e&&(e=e.hasRecommendation?`🎯 ${e.recText} @ ${e.recOdds.toFixed(2)} odds (EV: ${(100*e.ev).toFixed(1)}%) - ${e.home} vs `+e.away:`⚽ ${e.home} vs `+e.away,navigator.share?navigator.share({title:"ParlayKing Betting Pick",text:e,url:window.location.href}):navigator.clipboard.writeText(e))}}document.addEventListener("DOMContentLoaded",()=>{window.parlayKing=new ParlayKing}),document.addEventListener("visibilitychange",()=>{!document.hidden&&window.parlayKing&&setTimeout(()=>{window.parlayKing.loadAllData()},1e3)});